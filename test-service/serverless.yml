service: test-service
frameworkVersion: '^3.28.1'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ${self:custom.region}

custom:
  region: ${opt:region, "ap-south-1"}

plugins:
  localPath: "../lib/index.js"
  modules:
    - ""

pipes:
  testPipe:
    source:
      sqs:
        arn:
          Fn::GetAtt: [SourceSQSQueue, Arn]
        # batchsize: 3
        # maximumBatchingWindow: 5
    target:
      sqs:
        arn:
          Fn::GetAtt: [TargetSNSTopic, TopicArn]
    # enrichment: 
    #   name: hello-test-hey-testt
    # filter:
    #   - Pattern: 'abcd'
    #   - Pattern: 'defx'
    iamRolePipes:
      statements:
        - Effect: Allow
          Action:
            - sns:Subscribe
            - sns:Publish
          Resource: '*'
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
          Resource: '*'

functions:
  hello-test-hey-testt:
    handler: handler.hello

resources:
  Resources:
    SourceSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "SourceQueue"
    SubscriberSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "SubscriberQueue"
    SubscriberSNSPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: 
                Fn::GetAtt: [SubscriberSQSQueue, Arn]
              Principal:
                Service:
                  - 'sns.amazonaws.com'
        Queues:
          - { Ref: SubscriberSQSQueue }
    TargetSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
          - Endpoint:
              Fn::GetAtt: [SubscriberSQSQueue, Arn]
            Protocol: sqs
        TopicName: "TargetSNSTopic"


